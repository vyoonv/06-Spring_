<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.todo.model.mapper.TodoMapper">
<!--  Mapper 인터페이스 경로 작성 필수 패키지명.인터페이스명 -->

<!-- 해당 태그는 무조건 삭제!! -->
<!--<cache-ref namespace=""/>-->


	<!--  <select> 태그 속성 
		- id 속성 : 태그를 식별하는 값
		(연결된 Mapper의 메서드명과 동일하게 작성해서 연결)
		
		- resultType : 조회 결과 한 줄(1행)을 저장하여 
					   반환할 변수/객체 자료형 지정 
					   
					   조회 결과가 여러 행이면 행 별로 변수/객체 자료형으로 저장 후 
					   모아서 List 로 반환 
					   
		
		 -->


	<!-- 	edu.kh.todo.model.mapper.TodoMapper 인터페이스의 selectAll()메서드와 연결 
			==> selectAll() 메서드 호출 시 연결된 SQL 실행 
	-->
	
	<!--  edu.kh.todo.model.dto.Todo -> Todo 라고 써도 됨(DBConfig에서 별칭 등록 해둠) -->
	<select id="selectAll" resultType="Todo">
		SELECT TODO_NO, TODO_TITLE, TODO_CONTENT, COMPLETE, 
		TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM TB_TODO 
		ORDER BY TODO_NO
	</select>
	
	
	<!--  Java의 int는 Mybatis의 _int -->
	<select id="getCompleteCount" resultType="_int">
		SELECT COUNT(*)
		FROM TB_TODO
		WHERE COMPLETE = 'Y'	
	</select>

	<!--  parameterType : 전달 받은 값(전달인자/매개변수)의 타입을 명시
		  -> DTO, Map인 경우 필드명/key를 입력해서 하나씩 꺼낼 수 있음 	
	 -->
	 <!--  mapper에서 자바의 date(파라미어) 를 SQL에 삽입하는 방법'
	 	   1) #{변수명|필드명}: sql에 삽입시 양쪽에 '' 붙여서 삽입
	 	   
	 	   2) ${변수명|필드명}: SQL에  삽입시 양쪽에 ''붙이지 않고 삽입 
	 	   언제 사용할까? 
	 	   1) 삽입할 값이 숫자인 경우 (숫자 리터럴에 ''없음)
	 	   2) sql문 자체가 변해야 하는 경우
	 	   
	 	   ex) SELECT MEMBER_NAME, ${key} FROM "MEMBER"
	 	   
	 	   ${key} == ENROLL_DATE 인 경우 
	 	   SELECT MEMBER_NAME, ENROLL_DATE FROM "MEMBER"
	 	   
	 	   ${key} == SELECT MEMBER_NAME, MEMBER_ADDRESS FROM "MEMBER"   
		  -->

	<!--  할 일 추가 -->
	<insert id="addTodo" parameterType="Todo">
		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT, DEFAULT )
	</insert>
	
	<!-- 할 일 상세 조회  -->
	<select id="todoDetail" parameterType="_int" resultType="Todo">
		SELECT TODO_NO, TODO_TITLE, TODO_CONTENT, COMPLETE, 
		TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM TB_TODO 
		WHERE TODO_NO = ${todoNo}
	</select>

	<update id="changeComplete" parameterType="Todo">
		UPDATE TB_TODO SET
		COMPLETE = #{complete}
		WHERE TODO_NO = #{todoNo}
	</update>
	

	<!--  할 일 수정 -->
	<!-- 파라미터가 DTO인 경우 : #{필드명}, ${필드명} -->
	<!-- 파라미터가 map인 경우 : #{key}. ${key} -->
	<update id="todoUpdate" parameterType="Todo">
		UPDATE TB_TODO SET 
		TODO_TITLE = #{todoTitle}, 
		TODO_CONTENT = #{todoContent}
		WHERE TODO_NO = ${todoNo}
	</update>

	<!-- 할 일 삭제 -->
	<delete id="todoDelete" parameterType="_int">
		DELETE FROM TB_TODO
		WHERE TODO_NO = #{todoNo}
	</delete>
















<!-- 수행 하려는 SQL 구문 태그 작성-->
<!-- <select id="" parameterType="" resultType="">SQL 작성</select>
	 <insert id="" parameterType="">SQL 작성</insert>
	 <update id="" parameterType="">SQL 작성</update>
	 <delete id="" parameterType="">SQL 작성</update>  -->
</mapper>
